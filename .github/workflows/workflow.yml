name: Test mgp-timings

on:
  pull_request:
    branches:
      - "main"
  push:
    branches:
      - "main"

jobs:
  ci-server:
    env:
      secrets-available: ${{secrets.KUBE_CONFIG_EVO}}
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      repository-projects: write
    steps:

      - uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: "temurin"

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Bump version and push tag
        id: versioning
        uses: anothrNick/github-tag-action@1.71.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPO_OWNER: fabricepipart
          RELEASE_BRANCHES: main
          DEFAULT_BRANCH: main
          DRY_RUN: ${{ github.event_name == 'pull_request' }}
          PRERELEASE: ${{ github.event_name == 'pull_request' }}

      - name: Build Maven and Docker
        env:
          VERSION: ${{ steps.versioning.outputs.new_tag }}
          QUARKUS_CONTAINER_IMAGE_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          QUARKUS_CONTAINER_IMAGE_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          QUARKUS_CONTAINER_IMAGE_PUSH: ${{ env.secrets-available != '' }}
        run: |
          mvn -B -U versions:set -DnewVersion=${VERSION} &> /dev/null
          mvn -B -U clean verify -Dquarkus.profile=release

      - uses: codecov/codecov-action@v4
        if: ${{env.secrets-available}}
        with:
          token: ${{secrets.CODECOV_TOKEN}}
          flags: javaserver
          name: codecov-java-server

      - uses: azure/k8s-set-context@v4
        if: ${{env.secrets-available}}
        with:
          kubeconfig: ${{ secrets.KUBE_CONFIG_EVO }}

      - name: Update Production environment
        if: ${{ github.ref == 'refs/heads/main' && env.secrets-available != '' }}
        timeout-minutes: 10
        run: |
          kubectl delete all -n mgp-timings -l app=mgp-timings --wait=true
          kubectl kustomize target/classes/overlays/prod | kubectl apply -n mgp-timings -f -
          while ! curl -fs https://mgp-timings.evo.teknichrono.fr/q/health/live > /dev/null; do echo 'Not started yet ...'; sleep 5; done
