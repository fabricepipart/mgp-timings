name: Test mgp-timings

on:
  pull_request:
    branches:
      - "main"
  push:
    branches:
      - "main"

jobs:

  ci-server:
    env:
      secrets-available: ${{secrets.KUBE_CONFIG}}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Login to DockerHub
        uses: docker/login-action@v2
        if: ${{env.secrets-available}}
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Set up JDK 11
        uses: actions/setup-java@v3.5.0
        with:
          java-version: 11
          distribution: "adopt"
      - name: Bump version and push tag
        id: versioning
        uses: anothrNick/github-tag-action@1.45.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPO_OWNER: fabricepipart
          RELEASE_BRANCHES: main
          DRY_RUN: ${{ env.secrets-available == '' }}
      - name: Build Maven and Docker
        env:
          VERSION: ${{ steps.versioning.outputs.new_tag }}
          REPO: fabricepipart/mgp-timings
        run: |
          mvn -B -U versions:set -DnewVersion=${VERSION} &> /dev/null
          mvn -B -U clean verify
          docker build -f src/main/docker/Dockerfile -t $REPO:$VERSION .
      - name: Push Docker
        if: ${{env.secrets-available}}
        env:
          VERSION: ${{ steps.versioning.outputs.new_tag }}
          REPO: fabricepipart/mgp-timings
        run: |
          docker push $REPO:$VERSION
      - uses: codecov/codecov-action@v3
        if: ${{env.secrets-available}}
        with:
          token: ${{secrets.CODECOV_TOKEN}}
          flags: javaserver
          name: codecov-java-server
      - uses: azure/k8s-set-context@v3
        if: ${{env.secrets-available}}
        with:
          kubeconfig: ${{ secrets.KUBE_CONFIG }}
      - name: Update Production environment
        if: ${{ github.ref == 'refs/heads/main' && env.secrets-available != '' }}
        timeout-minutes: 10
        run: |
          kubectl delete all -n mgp-timings -l app=mgp-timings --wait=true
          kubectl kustomize target/classes/overlays/prod | kubectl apply -n mgp-timings -f -
          while ! curl -fs https://mgp-timings.teknichrono.fr/q/health/live > /dev/null; do echo 'Not started yet ...'; sleep 5; done
